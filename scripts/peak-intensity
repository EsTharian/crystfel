#!/usr/bin/env python

#
# Quantify peak intensities
#
# Copyright (c) 2015 Deutsches Elektronen-Synchrotron DESY,
#                    a research centre of the Helmholtz Association.
#
# Author:
#    2015 Thomas White <taw@physics.org>
#

import sys
import os
import re

f = open(sys.argv[1], 'r')

prog1 = re.compile("^\s*[\d\-\.]+\s+[\d\-\.]+\s+[\d\-\.]+\s+([\d\-\.]+)\s+.+$")

n_peaks = 0
n_patt = 0
total_intens = 0.0

while True:

    fline = f.readline()
    if not fline:
        break

    if fline == '----- Begin chunk -----\n':
        n_patt += 1

    match = prog1.match(fline)
    if match:
        intens = float(match.group(1))
        total_intens += intens
        n_peaks += 1


f.close()

print '%i patterns, %i peaks' % (n_patt,n_peaks)
print 'Mean %.2f peaks per pattern' % (n_peaks/n_patt)
print 'Mean %.2f ADU per peak' % (total_intens/n_peaks)
print 'Mean %.2f ADU total per pattern' % (total_intens/n_patt)

